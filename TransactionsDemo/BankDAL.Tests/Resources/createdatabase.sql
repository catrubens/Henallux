/*
Deployment script for TransactionsDemo

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;



/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/



if db_id('TransactionsDemoetu22351') is not null
   --code mine :)
	BEGIN 
		PRINT 'Database used to exist... Dropping it';
		ALTER DATABASE [TransactionsDemoetu22351]
		SET OFFLINE WITH ROLLBACK IMMEDIATE;
		ALTER DATABASE [TransactionsDemoetu22351]
		SET ONLINE;
		DROP DATABASE [TransactionsDemoetu22351];
	END


CREATE DATABASE [TransactionsDemoetu22351]
GO
USE [TransactionsDemoetu22351];




IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors

CREATE TABLE #tmpErrors (Error int)

SET XACT_ABORT ON

SET TRANSACTION ISOLATION LEVEL READ COMMITTED

BEGIN TRANSACTION

PRINT N'Creating [dbo].[CompteEnBanque]...';



CREATE TABLE [dbo].[CompteEnBanque] (
    [IBAN]  NVARCHAR (200)  NOT NULL,
    [Solde] DECIMAL (10, 2) NOT NULL,
    PRIMARY KEY CLUSTERED ([IBAN] ASC)
);



IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END



PRINT N'Creating unnamed constraint on [dbo].[CompteEnBanque]...';



ALTER TABLE [dbo].[CompteEnBanque]
    ADD DEFAULT 0 FOR [Solde];




INSERT INTO [dbo].[CompteEnBanque] ([IBAN],[Solde]) VALUES ('FR1420041010050500013M02606',1234.15), ('BE68539007547034',54.75);


IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END




IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION

IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'

DROP TABLE #tmpErrors

PRINT N'Update complete.';